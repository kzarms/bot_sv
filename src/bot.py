import csv
import json
import logging
import os
import random
from datetime import datetime

from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.constants import ParseMode
from telegram.ext import (
    ApplicationBuilder,
    CallbackQueryHandler,
    CommandHandler,
    ContextTypes,
    ConversationHandler,
)

debug = os.getenv("DEBUG", "")
FILES = [
    "./db/supervisors.json",
    "./db/supervisors_qeue.json",
    "./db/registrations.json",
]
if debug:
    # Run in debug
    logging.basicConfig(
        format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
        level=logging.INFO,
    )
    logging.info("Starting DEBUG mode!")
    SUPERVISORS = {
        "6412574124": {
            "FullName": "Kot",
            "Sessions": 2,
            "Requests": [],
            "Total": 0,
        },
        "1706832328": {
            "FullName": "Konstantin",
            "Sessions": 0,
            "Requests": [],
            "Total": 0,
            "UserName": "knstp",
        },
        "1222374948": {
            "FullName": "–õ–µ–Ω–∞ –ó–∞—Ä—É–¥–∞–µ–≤–∞",
            "Sessions": 0,
            "Requests": [],
            "Total": 0,
            "UserName": "helencoachde",
        },
    }
    SUPERVISORS_QEUE = ["6412574124", "1706832328", "1222374948"]
else:
    # Normal start
    SUPERVISORS = {}
    SUPERVISORS_QEUE = []
    logging.basicConfig(
        filename="./log.txt",
        filemode="a",
        format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
        level=logging.INFO,
    )
REGISTRATIONS = {}
# TIMEOUT_CONVERSATION = 1 * 60 * 1  # 10 min to complete conversation

# set higher logging level for httpx to avoid all GET and POST requests being logged
logging.getLogger("httpx").setLevel(logging.WARNING)

# region messages
FEEDBACK_URL = "https://forms.yandex.ru/cloud/659e5ee4e010db88f63e4db0/"
REPORT_URL = "https://docs.google.com/spreadsheets/d/1BKFfQUo2pu-Ksg6L9EXibRuasIjYLU84BBW00GanoHg/edit?pli=1#gid=508014521"

FOOTER_SV = "\n\n/review –ø–æ–∫–∞–∑–∞—Ç—å –∑–∞–ø—Ä–æ—Å—ã\n/stat –ø–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"
FOOTER_USER = "\n\n/session –∑–∞–ø—Ä–æ—Å–∏—Ç—å —Å—É–ø–µ—Ä–≤–∏–∑–∏—é\n/help –æ–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"
MSG_NON_SV = (
    "–í—ã –Ω–µ —è–≤—è–ª–µ—Ç–µ—Å—å —Å—É–ø–µ—Ä–≤–∏–∑–æ—Ä–æ–º, –ø–æ–ø—Ä–æ—Å–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–æ–±–∞–≤–∏—Ç—å –≤–∞—Å –≤ —Å–∏—Å—Ç–µ–º—É."
)
MSG_HELP = """–≠—Ç–æ—Ç –±–æ—Ç ü§ñ –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –Ω–∞–π—Ç–∏ —Å—É–ø–µ—Ä–≤–∏–∑–æ—Ä–∞ –∏ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –≤—Å—Ç—Ä–µ—á—É —Å –Ω–∏–º. üë•
<b>–ó–∞–ø–∏—Å—å –Ω–∞ —Å–µ—Å—Å–∏—é</b>
1. –ù–∞–∂–º–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /session, —á—Ç–æ–±—ã –∑–∞–ø—Ä–æ—Å–∏—Ç—å —Å—É–ø–µ—Ä–≤–∏–∑–∏—é. üìã
2. –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω–æ–≥–æ –∏–∑ —Å—É–ø–µ—Ä–≤–∏–∑–æ—Ä–æ–≤. üïµÔ∏è‚Äç‚ôÇÔ∏è
3. –î–æ–≥–æ–≤–æ—Ä–∏—Ç–µ—Å—å —Å —Å—É–ø–µ—Ä–≤–∏–∑–æ—Ä–æ–º –æ –∫–æ–Ω–∫—Ç—Ä–µ—Ç–Ω–æ–º –≤–µ—Ä–º–µ–Ω–∏. üìÖ

–í—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ –æ—Ç–æ–∑–≤–∞—Ç—å —Å–≤–æ–π –∑–∞–ø—Ä–æ—Å –∫–æ–º–∞–Ω–¥–æ–π /cancel –¥–æ —Ç–æ–≥–æ –∫–∞–∫ —Å—É–ø–µ—Ä–≤–∏–∑–æ—Ä –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª –µ–≥–æ –∏ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π, –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ.
–í –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω—ã—Ö —Å–ª—É—á–∞—è—Ö —Å—É–ø–µ—Ä–≤–∏–∑–æ—Ä –º–æ–∂–µ—Ç –æ—Ç–∫–ª–æ–Ω–∏—Ç—å –≤–∞—à –∑–∞–ø—Ä–æ—Å, –æ —á–µ–º –≤—ã –±—É–¥–µ—Ç–µ –æ–ø–æ–≤–µ—â–µ–Ω—ã.

<b>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏</b>
ü§ù –ï—Å–ª–∏ –≤–∞–º –Ω—É–∂–Ω–∞ —Å—É–ø–µ—Ä–≤–∏–∑–∏—è –≤ –ª–∏—á–Ω—ã—Ö —Ü–µ–ª—è—Ö (–Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è —Å–µ–±—è –∫–∞–∫ –¥–ª—è –∫–æ—É—á–∞ –∏–ª–∏ –¥–ª—è –ª—é–±–æ–π —Å–≤–æ–µ–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–π —Ä–æ–ª–∏ –∑–∞ –ø—Ä–µ–¥–µ–ª–∞–º–∏ –∞–∫–∞–¥–µ–º–∏–∏), –≤—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –Ω–∞—à–∏–º —Å—É–ø–µ—Ä–≤–∏–∑–æ—Ä–∞–º, –∫–æ—Ç–æ—Ä—ã–µ –≥–æ—Ç–æ–≤—ã —Ä–∞–±–æ—Ç–∞—Ç—å —Å –≤–∞–º–∏ –ø–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–π —Ç–∞—Ä–∏—Ñ–Ω–æ–π —Å—Ç–∞–≤–∫–µ - 3.000 —Ä—É–±–ª–µ–π.
–ê–∫—Ç—É–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Ç–∞–∫–∏—Ö —Å—É–ø–µ—Ä–≤–∏–∑–æ—Ä–æ–≤ –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å —É –õ–µ–Ω—ã –ó–∞—Ä—É–¥–∞–µ–≤–æ–π @helencoachde

<b>–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º</b>
–ü–æ–º–æ—â—å: /help
–ó–∞–ø—Ä–æ—Å —Å–µ—Å—Å–∏–∏: /session
–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —Å–µ—Å—Å–∏–∏: /help_more
–ü—Ä–æ—Ü–µ—Å—Å –æ–¥–æ–±—Ä–µ–Ω–∏—è: /help_next
–û—Ç–º–µ–Ω–∞ –∑–∞—è–≤–∫–∏: /cancel

–í—Å–µ –ø–æ–∂–µ–ª–∞–Ω–∏—è –ø–æ —É–ª—É—á—à–µ–Ω–∏—é, –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–ø—Ä–∞–≤–∏—Ç—å –õ–µ–Ω–µ –ó–∞—Ä—É–¥–∞–µ–≤–æ–π @helencoachde
üíõ –•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è üíõ
"""
MSG_HELP_MORE = f"""–ß—Ç–æ –≤–∞–∂–Ω–æ —É—á–µ—Å—Ç—å –∏ –∫–∞–∫ –ª—É—á—à–µ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è –∫ —Å—É–ø–µ—Ä–≤–∏–∑–∏–∏, —á—Ç–æ–±—ã –æ–Ω–∞ –ø—Ä–æ—à–ª–∞ –¥–ª—è –≤–∞—Å –Ω–∞–∏–ª—É—á—à–∏–º –æ–±—Ä–∞–∑–æ–º?

‚úÖ –ü–æ–¥—É–º–∞–π—Ç–µ –Ω–∞–¥ —Å–∏—Ç—É–∞—Ü–∏–µ–π, —Å–≤—è–∑–∞–Ω–Ω–æ–π —Å –≤–∞—à–µ–π —Ä–∞–±–æ—Ç–æ–π –≤ –ê–∫–∞–¥–µ–º–∏–∏, –∫–æ—Ç–æ—Ä—É—é –≤—ã —Ö–æ—Ç–µ–ª–∏ –±—ã –æ–±—Å—É–¥–∏—Ç—å —Å —Å—É–ø–µ—Ä–≤–∏–∑–æ—Ä–æ–º.

‚úÖ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏—Ö–æ–¥–∏—Ç–µ –≤–æ–≤—Ä–µ–º—è. –°—É–ø–µ—Ä–≤–∏–∑–æ—Ä –∂–¥–µ—Ç –≤–∞—Å <b>5 –º–∏–Ω—É—Ç</b>, –∞ –∑–∞—Ç–µ–º –∑–∞–≤–µ—Ä—à–∞–µ—Ç –≤—Å—Ç—Ä–µ—á—É.

‚úÖ –û–±–µ—Å–ø–µ—á—å—Ç–µ —Ç–∏—Ö—É—é –∏ —Å–ø–æ–∫–æ–π–Ω—É—é –æ–±—Å—Ç–∞–Ω–æ–≤–∫—É, —á—Ç–æ–±—ã –≤–∞–º –±—ã–ª–æ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞—Ç—å –æ —Å–µ–±–µ.

‚úÖ –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å—É–ø–µ—Ä–≤–∏–∑–∏–∏ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç <b>30 –º–∏–Ω—É—Ç</b>.

üíü –ù–∞—à–∏ —Å—É–ø–µ—Ä–≤–∏–∑–æ—Ä—ã –±—É–¥—É—Ç –≤–∞–º –±–ª–∞–≥–æ–¥–∞—Ä–Ω—ã –∑–∞ –æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–π <a href='{FEEDBACK_URL}'>–æ—Ç–∑—ã–≤</a> –æ —Ä–∞–±–æ—Ç–µ —Å—É–ø–µ—Ä–≤–∏–∑–æ—Ä–∞. <a href='{FEEDBACK_URL}'>–û—Ç–∑—ã–≤</a> —è–≤–ª—è–µ—Ç—Å—è –¥–æ–±—Ä–æ–≤–æ–ª—å–Ω—ã–º –∏ –∞–Ω–æ–Ω–∏–º–Ω—ã–º.
"""
MSG_HELP_NEXT = """‚ùì–ß—Ç–æ –¥–∞–ª—å—à–µ?

–°—É–ø–µ—Ä–≤–∏–∑–æ—Ä –ø–æ–ª—É—á–∏–ª –≤–∞—à –∑–∞–ø—Ä–æ—Å, –∏ –µ—Å–ª–∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ <b>–≤–∞—à–µ–≥–æ</b> –¢–µ–ª–µ–≥—Ä–∞–º –ø–æ–∑–≤–æ–ª—è—Ç –µ–º—É –Ω–∞–ø–∏—Å–∞—Ç—å –≤–∞–º —Å–æ–æ–±—â–µ–Ω–∏–µ, –æ–Ω —Å–¥–µ–ª–∞–µ—Ç —ç—Ç–æ –≤ —Ç–µ—á–µ–Ω–∏–µ <b>2-3 —á–∞—Å–æ–≤</b>.

–ï—Å–ª–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ —ç—Ç–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –≤—ã –Ω–µ –ø–æ–ª—É—á–∏–ª–∏ –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å—É–ø–µ—Ä–≤–∏–∑–æ—Ä–∞, –≤—ã –º–æ–∂–µ—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∏–º —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ, –Ω–∞–∂–∞–≤ –Ω–∞ –µ–≥–æ –∏–º—è –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏, –∏ –¥–æ–≥–æ–≤–æ—Ä–∏—Ç—å—Å—è –æ –≤—Ä–µ–º–µ–Ω–∏ –≤—Å—Ç—Ä–µ—á–∏.

–í—ã —Ç–∞–∫–∂–µ –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –º–æ–∂–µ—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å /cancel —Å–≤–æ–π –∑–∞–ø—Ä–æ—Å –∫ —ç—Ç–æ–º—É —Å—É–ø–µ—Ä–≤–∏–∑–æ—Ä—É, –ø–æ–∫–∞ –æ–Ω –µ–≥–æ –Ω–µ –ø—Ä–∏–Ω—è–ª.

–û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: /help"""
MSG_HELP_CONFIRM = """

–ö–∞–∫ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è: /help_more
–û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: /help
"""
MSG_HELP_REQUEST = """

–ß—Ç–æ –¥–∞–ª—å—à–µ: /help_next
–û—Ç–º–µ–Ω–∞ –∑–∞–ø—Ä–æ—Å–∞: /cancel
"""

USER_SESSION_CONFIRMATIONS = [
    f"üòÄ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é —Å SUPERVISOR –±—ã–ª–∞ —É—Å–ø–µ—à–Ω–æ –æ–¥–æ–±—Ä–µ–Ω–∞.\n\n–ú—ã —Ü–µ–Ω–∏–º –≤–∞—à–µ –¥–æ–≤–µ—Ä–∏–µ –∫ –Ω–∞—à–µ–π –∫–æ–º–∞–Ω–¥–µ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤. –ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –≤–∞—à–∏–º –º–Ω–µ–Ω–∏–µ–º –æ —Å–µ—Å—Å–∏–∏ —á–µ—Ä–µ–∑ <a href='{FEEDBACK_URL}'>–∞–Ω–æ–Ω–∏–º–Ω—ã–π –æ–ø—Ä–æ—Å</a> –Ω–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ.{MSG_HELP_CONFIRM}",
    f"üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –≤–∞—à –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤—Å—Ç—Ä–µ—á—É —Å —Å—É–ø–µ—Ä–≤–∏–∑–æ—Ä–æ–º SUPERVISOR –ø–æ–ª—É—á–∏–ª –æ–¥–æ–±—Ä–µ–Ω–∏–µ.\n\n–ú—ã —Ä–∞–¥—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –≤–∞–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Ä–∞–±–æ—Ç—ã —Å –Ω–∞—à–∏–º–∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–∞–º–∏. –û—Å—Ç–∞–≤—å—Ç–µ —Å–≤–æ–π <a href='{FEEDBACK_URL}'>–∞–Ω–æ–Ω–∏–º–Ω—ã–π –æ—Ç–∑—ã–≤</a> –æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–∏ –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ.{MSG_HELP_CONFIRM}",
    f"üåü –í–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –∑–∞ —Å—É–ø–µ—Ä–≤–∏–∑–∏–µ–π —É SUPERVISOR –ø—Ä–∏–Ω—è—Ç–æ.\n\n–°–ø–∞—Å–∏–±–æ –∑–∞ —Ç–æ, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ –Ω–∞—à—É —Å–ª—É–∂–±—É –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö —Å—É–ø–µ—Ä–≤–∏–∑–æ—Ä–æ–≤. –í–∞—à–µ –º–Ω–µ–Ω–∏–µ –≤–∞–∂–Ω–æ –¥–ª—è –Ω–∞—Å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Å—Ç–∞–≤—å—Ç–µ <a href='{FEEDBACK_URL}'>–∞–Ω–æ–Ω–∏–º–Ω—ã–π –æ—Ç–∑—ã–≤</a> –ø–æ—Å–ª–µ —Å–µ—Å—Å–∏–∏.{MSG_HELP_CONFIRM}",
    f"üòä –ó–∞—è–≤–∫–∞ –Ω–∞ —Å–µ—Å—Å–∏—é —Å—É–ø–µ—Ä–≤–∏–∑–∏–∏ —Å SUPERVISOR –æ–¥–æ–±—Ä–µ–Ω–∞.\n\n–ú—ã —Ü–µ–Ω–∏–º –≤–∞—à –≤—ã–±–æ—Ä –Ω–∞—à–∏—Ö —É—Å–ª—É–≥ –∏ —Å—Ç—Ä–µ–º–∏–º—Å—è –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –ª—É—á—à–µ–µ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ. –ù–µ –∑–∞–±—ã–≤–∞–π—Ç–µ, —á—Ç–æ –≤–∞—à–µ –º–Ω–µ–Ω–∏–µ –º–æ–∂–µ—Ç –±—ã—Ç—å <a href='{FEEDBACK_URL}'>–∞–Ω–æ–Ω–∏–º–Ω–æ</a> –æ–∑–≤—É—á–µ–Ω–æ –Ω–∞ –Ω–∞—à–µ–º —Ä–µ—Å—É—Ä—Å–µ.{MSG_HELP_CONFIRM}",
    f"üëç –í–∞—à –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å—É–ø–µ—Ä–≤–∏–∑–æ—Ä—Å–∫—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É –æ—Ç SUPERVISOR —É—Ç–≤–µ—Ä–∂–¥–µ–Ω.\n\n–ú—ã —Ä–∞–¥—ã —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞—Ç—å –≤–∞—Å –≤ —ç—Ç–æ–º –ø—Ä–æ—Ü–µ—Å—Å–µ –∏ –Ω–∞–¥–µ–µ–º—Å—è, —á—Ç–æ –æ–Ω –±—É–¥–µ—Ç –ø–ª–æ–¥–æ—Ç–≤–æ—Ä–Ω—ã–º. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º–∏ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è–º–∏ <a href='{FEEDBACK_URL}'>–∞–Ω–æ–Ω–∏–º–Ω–æ</a> –Ω–∞ –Ω–∞—à–µ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ.{MSG_HELP_CONFIRM}",
    f"üíñ –í–∞–º –æ–¥–æ–±—Ä–µ–Ω–∞ —Å—É–ø–µ—Ä–≤–∏–∑–∏—è —Å SUPERVISOR.\n\n–ú—ã —Ä–∞–¥—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –≤–∞–º –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É –Ω–∞—à–∏—Ö —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤. –í–∞—à –æ—Ç–∑—ã–≤ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Å—Ç–∞–≤–ª–µ–Ω <a href='{FEEDBACK_URL}'>–∞–Ω–æ–Ω–∏–º–Ω–æ</a> –∏ –±—É–¥–µ—Ç –æ—á–µ–Ω—å —Ü–µ–Ω–µ–Ω –¥–ª—è –Ω–∞—Å.{MSG_HELP_CONFIRM}",
    f"ü•≥ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ —Ä–∞–±–æ—Ç—É —Å —Å—É–ø–µ—Ä–≤–∏–∑–æ—Ä–æ–º SUPERVISOR —É—Å–ø–µ—à–Ω–æ –æ–¥–æ–±—Ä–µ–Ω–∞.\n\n–ú—ã –≥–æ—Ä–¥–∏–º—Å—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –≤–∞–º –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É. –ù–µ –∑–∞–±—É–¥—å—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å —Å–≤–æ–π <a href='{FEEDBACK_URL}'>–∞–Ω–æ–Ω–∏–º–Ω—ã–π –æ—Ç–∑—ã–≤</a> –Ω–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ.{MSG_HELP_CONFIRM}",
    f"üéà –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –≤–∞—à –∑–∞–ø—Ä–æ—Å –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é —Å —Å—É–ø–µ—Ä–≤–∏–∑–æ—Ä–æ–º SUPERVISOR –æ–¥–æ–±—Ä–µ–Ω.\n\n–ú—ã —Å—Ç—Ä–µ–º–∏–º—Å—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –≤–∞–º –ª—É—á—à—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Å—Ç–∞–≤—å—Ç–µ –≤–∞—à <a href='{FEEDBACK_URL}'>–∞–Ω–æ–Ω–∏–º–Ω—ã–π –æ—Ç–∑—ã–≤</a> –æ —Å–µ—Å—Å–∏–∏, —ç—Ç–æ –ø–æ–º–æ–∂–µ—Ç –Ω–∞–º —É–ª—É—á—à–∏—Ç—å –Ω–∞—à–∏ —É—Å–ª—É–≥–∏.{MSG_HELP_CONFIRM}",
    f"‚ú® –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ —Å–µ—Å—Å–∏—é —Å—É–ø–µ—Ä–≤–∏–∑–∏–∏ —Å SUPERVISOR –±—ã–ª–∞ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞.\n\n–ú—ã —Ä–∞–¥—ã –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –≤–∞–º –ø–æ–º–æ—â—å –Ω–∞—à–∏—Ö –∫–≤–∞–ª–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å—É–ø–µ—Ä–≤–∏–∑–æ—Ä–æ–≤. –í–∞—à–µ <a href='{FEEDBACK_URL}'>–∞–Ω–æ–Ω–∏–º–Ω–æ–µ –º–Ω–µ–Ω–∏–µ</a> –æ—á–µ–Ω—å –≤–∞–∂–Ω–æ –¥–ª—è –Ω–∞—Å, –Ω–µ –∑–∞–±—É–¥—å—Ç–µ –µ–≥–æ –æ—Å—Ç–∞–≤–∏—Ç—å.{MSG_HELP_CONFIRM}",
    f"üöÄ –í–∞—à –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤—Å—Ç—Ä–µ—á—É —Å —Å—É–ø–µ—Ä–≤–∏–∑–æ—Ä–æ–º SUPERVISOR –ø–æ–ª—É—á–∏–ª –∑–µ–ª–µ–Ω—ã–π —Å–≤–µ—Ç.\n\n–ú—ã –ø—Ä–∏–∑–Ω–∞—Ç–µ–ª—å–Ω—ã –∑–∞ –≤–∞—à–µ –¥–æ–≤–µ—Ä–∏–µ –∫ –Ω–∞—à–∏–º –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–º —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞–º. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º–∏ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è–º–∏ <a href='{FEEDBACK_URL}'>–∞–Ω–æ–Ω–∏–º–Ω–æ</a>, —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ —Å—Ç–∞—Ç—å –ª—É—á—à–µ.{MSG_HELP_CONFIRM}",
]

SV_SESSION_CONFIRMATIONS = [
    f"üåü –î–æ—Ä–æ–≥–æ–π —Å—É–ø–µ—Ä–≤–∏–∑–æ—Ä, –±–æ–ª—å—à–æ–µ —Å–ø–∞—Å–∏–±–æ –∑–∞ —Ç–≤–æ–∏ —É—Å–∏–ª–∏—è! üìù –ù–µ –∑–∞–±—É–¥—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–Ω–µ—Å—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—É–ø–µ—Ä–≤–∏–∑–∏—è—Ö –≤ <a href='{REPORT_URL}'>–æ—Ç—á–µ—Ç</a>. üôè",
    f"ü§ó –£–≤–∞–∂–∞–µ–º—ã–π —Å—É–ø–µ—Ä–≤–∏–∑–æ—Ä, –±–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ —Ç–≤–æ—é –≤–µ–ª–∏–∫–æ–ª–µ–ø–Ω—É—é —Ä–∞–±–æ—Ç—É! üìä –ú—ã –±—ã–ª–∏ –±—ã —Ä–∞–¥—ã –≤–∏–¥–µ—Ç—å –¥–∞–Ω–Ω—ã–µ —Å—É–ø–µ—Ä–≤–∏–∑–∏–π –≤ <a href='{REPORT_URL}'>–æ—Ç—á–µ—Ç</a>. üìå",
    f"üëã –ü—Ä–∏–≤–µ—Ç, –¥–æ—Ä–æ–≥–æ–π —Å—É–ø–µ—Ä–≤–∏–∑–æ—Ä! –û–≥—Ä–æ–º–Ω–æ–µ —Å–ø–∞—Å–∏–±–æ –∑–∞ —Ç–≤–æ–π –≤–∫–ª–∞–¥. üóÇÔ∏è –ù–µ –º–æ–≥ –±—ã —Ç—ã –¥–æ–±–∞–≤–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å—É–ø–µ—Ä–≤–∏–∑–∏–π –≤ –Ω–∞—à <a href='{REPORT_URL}'>–æ—Ç—á–µ—Ç</a>? üìà",
    f"üíº –£–≤–∞–∂–∞–µ–º—ã–π —Å—É–ø–µ—Ä–≤–∏–∑–æ—Ä, —Ç–≤–æ—è —Ä–∞–±–æ—Ç–∞ –≤–æ—Å—Ö–∏—Ç–∏—Ç–µ–ª—å–Ω–∞! üåà –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ –∑–∞–±—ã–≤–∞–π –≤–Ω–æ—Å–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ —Å—É–ø–µ—Ä–≤–∏–∑–∏—è—Ö –≤ <a href='{REPORT_URL}'>–æ—Ç—á–µ—Ç</a>. üìã",
    f"üíå –î–æ—Ä–æ–≥–æ–π —Å—É–ø–µ—Ä–≤–∏–∑–æ—Ä, —Ç—ã –¥–µ–ª–∞–µ—à—å –æ—Ç–ª–∏—á–Ω—É—é —Ä–∞–±–æ—Ç—É! üéâ –ë—É–¥—å —Ç–∞–∫ –¥–æ–±—Ä, –≤–∫–ª—é—á–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—É–ø–µ—Ä–≤–∏–∑–∏—è—Ö –≤ –Ω–∞—à <a href='{REPORT_URL}'>–æ—Ç—á–µ—Ç</a>. üìö",
    f"üëç –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º —Ç–µ–±—è, —Å—É–ø–µ—Ä–≤–∏–∑–æ—Ä! –¢–≤–æ–∏ —É—Å–∏–ª–∏—è –Ω–µ–æ—Ü–µ–Ω–∏–º—ã. üåü –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–±–µ–¥–∏—Å—å, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ —Å—É–ø–µ—Ä–≤–∏–∑–∏–π –æ—Ç—Ä–∞–∂–µ–Ω—ã –≤ <a href='{REPORT_URL}'>–æ—Ç—á–µ—Ç–µ</a>. ‚úÖ",
    f"üéñÔ∏è –£–≤–∞–∂–∞–µ–º—ã–π —Å—É–ø–µ—Ä–≤–∏–∑–æ—Ä, —Ç–≤–æ—è —Ä–∞–±–æ—Ç–∞ –∑–∞—Å–ª—É–∂–∏–≤–∞–µ—Ç –ø–æ—Ö–≤–∞–ª—ã! üìò –ù–µ –∑–∞–±—É–¥—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–Ω–µ—Å—Ç–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ –≤ <a href='{REPORT_URL}'>–æ—Ç—á–µ—Ç–µ</a>. üñäÔ∏è",
    f"üå∫ –î–æ—Ä–æ–≥–æ–π —Å—É–ø–µ—Ä–≤–∏–∑–æ—Ä, —Ç–≤–æ—è –ø–æ–º–æ—â—å –±–µ—Å—Ü–µ–Ω–Ω–∞! üíº –ñ–¥–µ–º –¥–∞–Ω–Ω—ã—Ö –æ —Å—É–ø–µ—Ä–≤–∏–∑–∏—è—Ö –≤ –Ω–∞—à–µ–º <a href='{REPORT_URL}'>–æ—Ç—á–µ—Ç–µ</a>. üìâ",
    f"üí´ –£–≤–∞–∂–∞–µ–º—ã–π —Å—É–ø–µ—Ä–≤–∏–∑–æ—Ä, –±–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ —Ç–≤–æ–π –≤–∫–ª–∞–¥! üìñ –ù–∞–¥–µ–µ–º—Å—è —É–≤–∏–¥–µ—Ç—å –¥–∞–Ω–Ω—ã–µ –æ —Å—É–ø–µ—Ä–≤–∏–∑–∏—è—Ö –≤ <a href='{REPORT_URL}'>–æ—Ç—á–µ—Ç–µ</a> –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è. ‚è≥",
    f"üôå –ü—Ä–∏–≤–µ—Ç, –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω—ã–π —Å—É–ø–µ—Ä–≤–∏–∑–æ—Ä! –¢–≤–æ—è —Ä–∞–±–æ—Ç–∞ –≤–¥–æ—Ö–Ω–æ–≤–ª—è–µ—Ç –Ω–∞—Å. üåü –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ –∑–∞–±—É–¥—å –≤–Ω–µ—Å—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—É–ø–µ—Ä–≤–∏–∑–∏—è—Ö –≤ –Ω–∞—à <a href='{REPORT_URL}'>–æ—Ç—á–µ—Ç</a>. üìë",
]

REPORT_CONFIRMATIONS = [
    "–ü—Ä–∏–≤–µ—Ç, –ó–∞—è—Ü! üòä –¢–≤–æ—è —É–ª—ã–±–∫–∞ —Å–µ–≥–æ–¥–Ω—è –æ—Å–æ–±–µ–Ω–Ω–æ —Å–∏—è–µ—Ç. –ö—Å—Ç–∞—Ç–∏, –æ—Ç—á–µ—Ç –≥–æ—Ç–æ–≤, –∫–∞–∫ –∏ –æ–±–µ—â–∞–ª. üìÑ‚ú®",
    "–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ, –£—Ö! üåû –¢—ã —Å–µ–≥–æ–¥–Ω—è –≤—ã–≥–ª—è–¥–∏—à—å –ø—Ä–æ—Å—Ç–æ –≤–µ–ª–∏–∫–æ–ª–µ–ø–Ω–æ. –ê –µ—â–µ —É –º–µ–Ω—è –¥–ª—è —Ç–µ–±—è —Ö–æ—Ä–æ—à–∏–µ –Ω–æ–≤–æ—Å—Ç–∏: –æ—Ç—á–µ—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –≥–æ—Ç–æ–≤. üìäüåü",
    "–ü—Ä–∏–≤–µ—Ç–∏–∫, üê∞ –¢—ã –≤—Å–µ–≥–¥–∞ –Ω–∞—Ö–æ–¥–∏—à—å —Å–ø–æ—Å–æ–± –∑–∞—Å—Ç–∞–≤–∏—Ç—å –º–µ–Ω—è —É–ª—ã–±–∞—Ç—å—Å—è. –°–ø–µ—à—É —Å–æ–æ–±—â–∏—Ç—å, —á—Ç–æ —Ç–≤–æ–π –æ—Ç—á–µ—Ç –≥–æ—Ç–æ–≤. üìàüíñ",
    "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π, –£—Ö! üëã –¢–≤–æ–π —Å—Ç–∏–ª—å —Å–µ–≥–æ–¥–Ω—è –ø—Ä–æ—Å—Ç–æ –±–µ–∑—É–ø—Ä–µ—á–µ–Ω. –ò –∫—Å—Ç–∞—Ç–∏, –æ—Ç—á–µ—Ç —É–∂–µ –Ω–∞ —Ç–≤–æ–µ–º —Å—Ç–æ–ª–µ. üìëüéâ",
    "–ü—Ä–∏–≤–µ—Ç, üêá ‚òÄÔ∏è –¢—ã —Å–µ–≥–æ–¥–Ω—è –∫–∞–∫ —Å–æ–ª–Ω—Ü–µ - —Å–≤–µ—Ç–∏—à—å—Å—è –∏–∑–Ω—É—Ç—Ä–∏. –û—Ç—á–µ—Ç, –∫—Å—Ç–∞—Ç–∏, —É–∂–µ –≥–æ—Ç–æ–≤. üìù‚úÖ",
    "üê∞, —Ç—ã –∫–∞–∫ –≤—Å–µ–≥–¥–∞ –æ—á–∞—Ä–æ–≤–∞—Ç–µ–ª—å–Ω–∞! üí´ –ò —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å —Ç–µ–±–µ —Ä–∞–¥–æ—Å—Ç–∏, –æ—Ç—á–µ—Ç —É–∂–µ –≥–æ—Ç–æ–≤. üìöüíå",
    "–ü—Ä–∏–≤–µ—Ç, –ó–∞—è—Ü! üå∫ –¢–≤–æ–∏ –∏–¥–µ–∏ –≤—Å–µ–≥–¥–∞ —Ç–∞–∫–∏–µ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ, –∫–∞–∫ –∏ —Ç—ã —Å–∞–º–∞. –û—Ç—á–µ—Ç –≥–æ—Ç–æ–≤, –∂–¥–µ—Ç —Ç–µ–±—è. üìñüöÄ",
    "–£—Ö, —Ç–≤–æ–π —ç–Ω—Ç—É–∑–∏–∞–∑–º –ø—Ä–æ—Å—Ç–æ –∑–∞—Ä–∞–∑–∏—Ç–µ–ª–µ–Ω! üòÉ –ì–æ—Ç–æ–≤–∞ –ª–∏ —Ç—ã —É—Å–ª—ã—à–∞—Ç—å, —á—Ç–æ –æ—Ç—á–µ—Ç —Ç–æ–∂–µ –∑–∞—Ä–∞–∑–∏—Ç–µ–ª—å–Ω–æ –≥–æ—Ç–æ–≤? üìãüéà",
    "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π, üêá! üíñ –¢—ã —Å–µ–≥–æ–¥–Ω—è –ø—Ä–æ—Å—Ç–æ —Å–≤–µ—Ä–∫–∞–µ—à—å. –ò —è —Å–≤–µ—Ä–∫–∞—é –æ—Ç —Ä–∞–¥–æ—Å—Ç–∏, —Å–æ–æ–±—â–∞—è, —á—Ç–æ –æ—Ç—á–µ—Ç –≥–æ—Ç–æ–≤. üåüüìö",
    "–ü—Ä–∏–≤–µ—Ç, –£—Ö! ü§ó –¢—ã –≤—Å–µ–≥–¥–∞ —Ç–∞–∫–∞—è –≤–¥—É–º—á–∏–≤–∞—è, —ç—Ç–æ –≤–æ—Å—Ö–∏—â–∞–µ—Ç. –û—Ç—á–µ—Ç –≥–æ—Ç–æ–≤, –∫–∞–∫ –∏ —Ç–≤–æ–∏ –º—ã—Å–ª–∏, –≤—Å–µ–≥–¥–∞ –Ω–∞ –º–µ—Å—Ç–µ. üß†üìÉ",
    "–ó–∞—è—Ü, —Ç–≤–æ–µ —Ç–µ—Ä–ø–µ–Ω–∏–µ –∏ —É—Å–µ—Ä–¥–∏–µ –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—Ç. –° —Ä–∞–¥–æ—Å—Ç—å—é —Å–æ–æ–±—â–∞—é, —á—Ç–æ –æ—Ç—á–µ—Ç –≥–æ—Ç–æ–≤. üêæüíå",
    "–£—Ö, —Ç–≤–æ–µ —á—É–≤—Å—Ç–≤–æ —é–º–æ—Ä–∞ - –º–æ–µ —Å–ø–∞—Å–µ–Ω–∏–µ –≤ —Å–µ—Ä—ã–µ –¥–Ω–∏. –ö–∞–∫ –∏ —Ç–≤–æ–π –æ—Ç—á–µ—Ç, –∫–æ—Ç–æ—Ä—ã–π —É–∂–µ –≥–æ—Ç–æ–≤. üòÇüìë",
    "–ó–∞—è—Ü, —Ç—ã –∫–∞–∫ –≤—Å–µ–≥–¥–∞ –Ω–∞ –≤—ã—Å–æ—Ç–µ! –ò —á—Ç–æ–±—ã —Ç–≤–æ–π –¥–µ–Ω—å –±—ã–ª –µ—â–µ –ª—É—á—à–µ, –æ—Ç—á–µ—Ç —É–∂–µ –≥–æ—Ç–æ–≤. üöÄüìä",
    "–ü—Ä–∏–≤–µ—Ç, üêá. üíê –¢–≤–æ—è –∏–Ω—Ç—É–∏—Ü–∏—è –ø—Ä–æ—Å—Ç–æ –ø–æ—Ä–∞–∑–∏—Ç–µ–ª—å–Ω–∞, –∫–∞–∫ –∏ —Å–∫–æ—Ä–æ—Å—Ç—å, —Å –∫–æ—Ç–æ—Ä–æ–π –±—ã–ª –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω —ç—Ç–æ—Ç –æ—Ç—á–µ—Ç. –ì–æ—Ç–æ–≤–æ! üåàüìà",
    "–ó–∞—è—Ü, —Ç—ã –∏—Å—Ç–æ—á–Ω–∏–∫ –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏—è –¥–ª—è –≤—Å–µ—Ö –Ω–∞—Å. üåü –ò –≤–æ—Ç —Ç–≤–æ–π –æ—Ç—á–µ—Ç, –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã–π —Å —Ç–∞–∫–æ–π –∂–µ –∑–∞–±–æ—Ç–æ–π. üììüíï",
    "–£—Ö, —Ç—ã –ø—Ä–µ–≤–æ—Å—Ö–æ–¥–∏—à—å –æ–∂–∏–¥–∞–Ω–∏—è –≤ –∫–∞–∂–¥–æ–º –¥–µ–ª–µ. üå† –ò —Ç–≤–æ–π –æ—Ç—á–µ—Ç, –∫–æ–Ω–µ—á–Ω–æ, –Ω–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ - –æ–Ω —É–∂–µ –≥–æ—Ç–æ–≤. üóÇÔ∏èüí°",
    "üê∞, —Ç–≤–æ—è —ç–Ω–µ—Ä–≥–∏—è –æ—Å–≤–µ–∂–∞–µ—Ç –∫–∞–∫ —É—Ç—Ä–µ–Ω–Ω–∏–π –±—Ä–∏–∑. üå¨Ô∏è –ò —Ä–∞–¥–æ—Å—Ç–Ω–æ–µ –∏–∑–≤–µ—Å—Ç–∏–µ: –æ—Ç—á–µ—Ç –≥–æ—Ç–æ–≤! üìÅüå∏",
]


# endregion
# region local functions
def get_tocken() -> str:
    try:
        with open("./token.txt", "r") as f:
            return f.readline()
    except:
        logging.error("Problem with token")
    return ""


def add_sv_request(id, user_id, user_name) -> bool:
    # Add request for supervisor
    SUPERVISORS[id]["Requests"].append({"id": user_id, "FullName": user_name})
    logging.info(f"Added request from {user_name} for {SUPERVISORS[id]['FullName']}")
    return True


def add_sv_session(supervisor) -> bool:
    # This function adds session to the supervisor
    SUPERVISORS[supervisor]["Total"] += 1
    if SUPERVISORS[supervisor]["Sessions"] >= 2:
        logging.info(
            f"This is the third session, put {SUPERVISORS[supervisor]['FullName']} in the end of the list."
        )
        SUPERVISORS[supervisor]["Sessions"] = 0
        return True
    else:
        logging.info(f"Adding session for {supervisor}")
        SUPERVISORS[supervisor]["Sessions"] += 1
    return False


def del_sv_request(id, user_id) -> bool:
    # Add request for supervisor
    temp_list = SUPERVISORS[id]["Requests"]
    for request in SUPERVISORS[id]["Requests"]:
        if request["id"] == user_id:
            temp_list.remove(request)
            break
    SUPERVISORS[id]["Requests"] = temp_list
    logging.info(f"Removed {user_id} request from {SUPERVISORS[id]['FullName']}")
    return True


def decline_sv_requests(id) -> bool:
    # Add request for supervisor
    temp_list = SUPERVISORS[id]["Requests"]
    SUPERVISORS[id]["Requests"] = []
    logging.info(
        f"Removed {len(temp_list)} requests from {SUPERVISORS[id]['FullName']}"
    )
    return temp_list


def update_sv_list(supervisor):
    """Update list of supervisors"""
    if supervisor in SUPERVISORS_QEUE:
        logging.info(f"User {supervisor} is in the list")
        SUPERVISORS_QEUE.remove(supervisor)
    SUPERVISORS_QEUE.append(supervisor)
    logging.info(f"Update user list of supervisors {SUPERVISORS_QEUE}")
    return SUPERVISORS_QEUE


def save_to_local():
    """Save data to local file"""
    for file in FILES:
        file.upper()
        var = file[5:-5].upper()
        with open(file, "w", encoding="utf-8") as f:
            json.dump(globals()[var], f, ensure_ascii=False, indent=4)
    logging.info(f"Saved to local files")


def load_from_local():
    """Save data to local file"""
    logging.info("Read from local files")
    for file in FILES:
        var = file[5:-5].upper()
        # If we have data in the vars, do not load them
        if len(globals()[var]) == 0:
            with open(file, "r", encoding="utf-8") as f:
                globals()[var] = json.load(f)
                logging.info(f"Loaded {len(globals()[var])} objects for {var}")
    logging.info(f"Active queue is:\n{SUPERVISORS_QEUE}")


def create_sv_list_from_db():
    """Create list of supervisors"""
    if len(SUPERVISORS_QEUE) == 0:
        for supervisor in SUPERVISORS:
            SUPERVISORS_QEUE.append(supervisor)
        logging.info(f"Found empty QEUE, load it!\n{SUPERVISORS_QEUE}")
    return SUPERVISORS_QEUE


def gen_report() -> str:
    # Generate csv file
    current_datetime = datetime.now()
    file_name = f"{current_datetime.strftime('%Y-%m-%d_%H:%M:%S')}_report.csv"
    with open(file_name, "w", encoding="utf-8", newline="") as csvfile:
        csvwriter = csv.writer(csvfile)
        csvwriter.writerow(["–°—É–ø–µ—Ä–≤–∏–∑–æ—Ä", "–°–µ—Å—Å–∏–∏", "–ó–∞–ø—Ä–æ—Å—ã", "–í—Å–µ–≥–æ"])
        for supervisor in SUPERVISORS:
            csvwriter.writerow(
                [
                    SUPERVISORS[supervisor]["FullName"],
                    SUPERVISORS[supervisor]["Sessions"],
                    len(SUPERVISORS[supervisor]["Requests"]),
                    SUPERVISORS[supervisor]["Total"],
                ]
            )
    return file_name


# endregion
# region telegram functions
async def help(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """General help message about commands"""
    await update.message.reply_text(MSG_HELP, parse_mode=ParseMode.HTML)


async def help_more(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """Help message about more info"""
    await update.message.reply_text(MSG_HELP_MORE, parse_mode=ParseMode.HTML)


async def help_next(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """Help message about next"""
    await update.message.reply_text(MSG_HELP_NEXT, parse_mode=ParseMode.HTML)


async def reg(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """Register as Supervisor"""
    logging.info(f"Registration for {update.effective_user}")
    message = f"–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –ø—Ä–∏–Ω—è—Ç–∞."
    await update.message.reply_text(message)
    msg = f"–ü—Ä–∏–≤–µ—Ç, –£—Ö! –í —Ç–≤–æ–π –±–æ—Ç –ø—Ä–æ—Å–∏—Ç—Å—è –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é {update.effective_user.first_name}. –°–∫–∞–∂–∏ –º—É–∂—É —á—Ç–æ–± –¥–æ–±–∞–≤–∏–ª {update.effective_user.id}. –ß–º–æ–∫!"
    await context.bot.send_message(
        chat_id="1222374948", text=msg, parse_mode=ParseMode.HTML
    )


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """First interruction with the user, keep in USER db"""
    user = update.effective_user.id
    message = f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å {update.effective_user.full_name}!{FOOTER_USER}"
    if user in SUPERVISORS:
        message += FOOTER_SV
    await update.message.reply_text(message)


async def stat(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """Get status for superuser"""
    supervisor = str(update.effective_user.id)
    if supervisor not in SUPERVISORS:
        await update.message.reply_text(MSG_NON_SV)
        return
    if supervisor == "1222374948":
        # Special report for Lena
        report_file = gen_report()
        message = random.choice(REPORT_CONFIRMATIONS)
        await update.message.reply_text(message)
        with open(report_file, "rb") as file:
            await context.bot.sendDocument(
                chat_id=update.effective_user.id, document=file, filename=report_file
            )
    else:
        # Common message
        message = f"–£ –≤–∞—Å {SUPERVISORS[supervisor]['Sessions']} –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–µ—Å—Å–∏–π –∏ {len(SUPERVISORS[supervisor]['Requests'])} –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –æ–∂–∏–¥–∞–Ω–∏–∏.{FOOTER_SV}"
        await update.message.reply_text(message)


async def session_sv_select(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """Sends a message with three inline buttons attached."""
    user_id = str(update.effective_user.id)
    if user_id in REGISTRATIONS:
        await update.message.reply_text(
            "–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å—É–ø–µ—Ä–≤–∏–∑–∏—é.\n\n/cancel –æ—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å"
        )
        return ConversationHandler.END
    keyboard = []
    # If we have less than 4 items, just add them to the keyboard,
    items = min(len(SUPERVISORS_QEUE), 4)
    for i in range(items):
        supervisor = SUPERVISORS_QEUE[i]
        keyboard.append(
            [InlineKeyboardButton(SUPERVISORS[supervisor]["FullName"], callback_data=i)]
        )
    keyboard.append([InlineKeyboardButton("Cancel", callback_data="99")])
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ —Å—É–ø–µ—Ä–≤–∏–∑–æ—Ä–∞:", reply_markup=reply_markup)
    return 0


async def session_sv_request(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """Parses the CallbackQuery and updates the message text."""
    query = update.callback_query
    user_id = str(update.effective_user.id)
    await query.answer()
    answer = int(query.data)
    if answer == 99:
        await query.edit_message_text(text="–û—Ç–º–µ–Ω–µ–Ω–æ")
        return ConversationHandler.END
    # Todo: Add check if the ID in the requests
    # Request session for the SV
    id = SUPERVISORS_QEUE[answer]
    # Add user request into DB
    REGISTRATIONS[user_id] = id
    add_sv_request(id, user_id, update.effective_user.full_name)
    # Notify SV
    logging.info(REGISTRATIONS)
    username = ""
    try:
        username = f" @{update.effective_user.username}"
    except:
        logging.info(f"{update.effective_user.first_name} does not have username")
    msg = f"–£ –≤–∞—Å –µ—Å—Ç—å –Ω–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å—É–ø–µ—Ä–≤–∏–∑–∏—é –æ—Ç {update.effective_user.mention_html()}{username}.{FOOTER_SV}"
    await context.bot.send_message(chat_id=id, text=msg, parse_mode=ParseMode.HTML)
    # Notify User
    sv_username = ""
    if "UserName" in SUPERVISORS[id]:
        sv_username = f' @{SUPERVISORS[id]["UserName"]}'
    message = f'–í–∞—à –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å—É–ø–µ—Ä–≤–∏–∑–∏—é –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω <a href="tg://user?id={id}">{SUPERVISORS[id]["FullName"]}</a>.{sv_username}{MSG_HELP_REQUEST}'
    # Send message back to the user
    await query.edit_message_text(text=message, parse_mode=ParseMode.HTML)
    save_to_local()
    return ConversationHandler.END


async def supervisor_select(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """Sends a message with three inline buttons attached."""
    # If empty end conversation
    supervisor = str(update.effective_user.id)
    if supervisor not in SUPERVISORS:
        await update.message.reply_text(MSG_NON_SV)
        return ConversationHandler.END
    # If empty end conversation
    requests = SUPERVISORS[supervisor]["Requests"]
    if requests == []:
        await update.message.reply_text("–£ –≤–∞—Å –Ω–µ—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ —Å—É–ø–µ—Ä–≤–∏–∑–∏—é")
        return ConversationHandler.END
    keyboard = []
    # If not empty add buttons to the keyboard,
    for i in range(len(requests)):
        requestor = requests[i]
        keyboard.append(
            [InlineKeyboardButton(requestor["FullName"], callback_data=requestor["id"])]
        )
    keyboard.append([InlineKeyboardButton("Cancel", callback_data="99")])
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å:", reply_markup=reply_markup)
    return 0


async def supervisor_review(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    query = update.callback_query
    supervisor = str(update.effective_user.id)
    await query.answer()
    answer = query.data
    if answer == "99":
        await query.edit_message_text(text="–û—Ç–º–µ–Ω–µ–Ω–æ")
        return ConversationHandler.END
    keyboard = [
        [
            InlineKeyboardButton("–ü—Ä–∏–Ω—è—Ç—å", callback_data=f"accept {answer}"),
            InlineKeyboardButton("–û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f"decline {answer}"),
        ]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    for user in SUPERVISORS[supervisor]["Requests"]:
        if user["id"] == int(answer):
            break
    msg = f"–°—É–ø–µ—Ä–≤–∏–∑–∏—è –¥–ª—è {user['FullName']}"
    await query.edit_message_text(text=msg, reply_markup=reply_markup)
    return 1


async def supervisor_answer(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    "Final processing"
    users_to_notify = []
    reset = False
    query = update.callback_query
    supervisor = str(update.effective_user.id)
    await query.answer()
    answer = query.data.split(" ")
    for user in SUPERVISORS[supervisor]["Requests"]:
        if user["id"] == answer[1]:
            break
    # Accept
    if answer[0] == "accept":
        sv_message = f"–ó–∞–ø—Ä–æ—Å –æ–¥–æ–±—Ä–µ–Ω –¥–ª—è {user['FullName']}"
        user_message = random.choice(USER_SESSION_CONFIRMATIONS)
        user_message = user_message.replace(
            "SUPERVISOR", SUPERVISORS[supervisor]["FullName"]
        )
        reset = add_sv_session(supervisor)
        if reset:
            # Reset couner
            update_sv_list(supervisor)
            sv_message += f"\n\n{random.choice(SV_SESSION_CONFIRMATIONS)}"
    # Decline
    else:
        sv_message = f"–ó–∞–ø—Ä–æ—Å –æ—Ç–∫–ª–æ–Ω–µ–Ω –¥–ª—è {user['FullName']}"
        user_message = f"–í–∞—à –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å—É–ø–µ—Ä–≤–∏–∑–∏—é –∫ {SUPERVISORS[supervisor]['FullName']} –æ—Ç–∫–ª–æ–Ω–µ–Ω."
    # Remove user from request and waiting list
    REGISTRATIONS.pop(user["id"])
    del_sv_request(supervisor, user["id"])
    # Notify user
    await context.bot.send_message(
        chat_id=user["id"], text=user_message, parse_mode=ParseMode.HTML
    )
    if reset:
        # Cleanup requests
        users_to_notify = decline_sv_requests(supervisor)
        user_message_decline = (
            f"–°–ª–æ—Ç—ã —É —Å—É–ø–µ—Ä–≤–∏–∑–æ—Ä–∞ {SUPERVISORS[supervisor]['FullName']} –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å. "
        )
        user_message_decline = "–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∫ –¥—Ä—É–≥–æ–º—É —Å–≤–æ–±–æ–¥–Ω–æ–º—É —Å—É–ø–µ—Ä–≤–∏–∑–æ—Ä—É.\n\n/session –∑–∞–ø—Ä–æ—Å–∏—Ç—å —Å—É–ø–µ—Ä–≤–∏–∑–∏—é"
        for user in users_to_notify:
            await context.bot.send_message(
                chat_id=user["id"], text=user_message_decline
            )
    # Add session into DB
    await query.edit_message_text(text=sv_message, parse_mode=ParseMode.HTML)
    save_to_local()
    return ConversationHandler.END


async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """Cancel and end the conversation."""
    user_id = str(update.effective_user.id)
    if user_id in REGISTRATIONS:
        supervisor = REGISTRATIONS[user_id]
        REGISTRATIONS.pop(user_id)
        del_sv_request(supervisor, user_id)
        await update.message.reply_text(
            f"–í–∞—à –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å—É–ø–µ—Ä–≤–∏–∑–∏—é –∫ {SUPERVISORS[supervisor]['FullName']} –æ—Ç–º–µ–Ω–µ–Ω."
        )
        msg = f"–ó–∞–ø—Ä–æ—Å –æ—Ç {update.effective_user.full_name} –æ—Ç–º–µ–Ω–µ–Ω –ø–æ–ª—å–∑–æ–≤–µ—Ç–µ–ª–µ–º.{FOOTER_SV}"
        save_to_local()
        await context.bot.send_message(chat_id=supervisor, text=msg)
    else:
        await update.message.reply_text("–ù–µ –≤–æ–ø—Ä–æ—Å, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑.")
        user = update.message.from_user
        logging.info(f"User {user.full_name} canceled the conversation.")
        return ConversationHandler.END


# endregion


# main function
def main():
    # Load data in memory
    load_from_local()
    create_sv_list_from_db()
    # Get access
    token = get_tocken()
    if not token:
        return 1
    # Star the chat bot
    application = ApplicationBuilder().token(token).build()
    # Commands
    application.add_handler(CommandHandler("help", help))
    application.add_handler(CommandHandler("help_more", help_more))
    application.add_handler(CommandHandler("help_next", help_next))
    application.add_handler(CommandHandler("reg", reg))
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("stat", stat))
    application.add_handler(CommandHandler("cancel", cancel))
    # Conversations
    conv_sesion_request = ConversationHandler(
        allow_reentry=True,
        entry_points=[CommandHandler("session", session_sv_select)],
        states={
            0: [CallbackQueryHandler(session_sv_request)],
        },
        fallbacks=[CommandHandler("cancel", cancel)],
    )
    conv_sesion_review = ConversationHandler(
        allow_reentry=True,
        entry_points=[CommandHandler("review", supervisor_select)],
        states={
            0: [CallbackQueryHandler(supervisor_review)],
            1: [CallbackQueryHandler(supervisor_answer)],
        },
        fallbacks=[CommandHandler("cancel", cancel)],
    )
    application.add_handler(conv_sesion_request)
    application.add_handler(conv_sesion_review)
    # App
    application.run_polling(allowed_updates=Update.ALL_TYPES)


# Local execution
if __name__ == "__main__":
    main()
